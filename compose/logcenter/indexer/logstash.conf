input {
  rabbitmq {
    host => "mq"
    exchange => "was"
    queue => "logstash"
    key => "logstash"
    threads => 1
    prefetch_count => 50
    durable => true
    user => "mq"
    password => "mq"
  }
}

filter {
  if [type] == "was" {
    grok {
      patterns_dir => "$LOGSTASH_HOME/patterns/"
      match => [
        "message",
        "%{TIMESTAMP:timestamp}(\D)+%{TID:tid}\s%{WORD:source}\s+%{CATEGORY:category}"
      ]
      tag_on_failure => ["_parse_msg_failure"]
    }

    if [source] == "SystemOut" {
      grok {
        patterns_dir => "$LOGSTASH_HOME/patterns/"
        match => [
          "message", 
          "%{GREEDYDATA} %{LOGLEVEL:loglevel} %{LOCATION:location}.+\s%{EXCEPTION:exception}:%{GREEDYDATA}"
        ]
        add_tag => ["exception"]
        tag_on_failure => ["_parse_sysout_failure"]
      }
      if "ERROR" != [loglevel] {
        mutate {
          add_tag => ["invalid_format", "sysout"]
        }
      }
    } else if [category] == "E" and [source] in ["filter", "servlet", "webapp"] {
      grok {
        patterns_dir => "$LOGSTASH_HOME/patterns/"
        match => [
          "message", 
          "%{LOCATION:location}.+\s%{EXCEPTION:exception}:%{GREEDYDATA}"
        ]
        add_tag => ["servlet"]
        tag_on_failure => ["_parse_servlet_failure"]
      }
    } else {
      mutate {
        add_tag => ["invalid_format", "servlet"]
      }
    }

    date {
      match => ["timestamp", "MM/dd/yy HH:mm:ss:SSS"]
    }
  }
}
 
output {
  if "invalid_format" in [tags] {
    elasticsearch {
      hosts => "es"
      index => "was-%{+YYYY.MM}-invalid"
      document_type => "was"
      workers => 4
    }
  } else {
    elasticsearch {
      hosts => "es"
      index => "was-%{+YYYY.MM}"
      document_type => "was"
      workers => 4
    }
  }
}
